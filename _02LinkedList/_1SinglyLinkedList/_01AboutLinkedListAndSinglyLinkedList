Question--> What is Linked List?
Answer--> a linked list is a linear collection of data elements whose order is not given by their
		  physical placement in memory. Instead, each element points to the next. It is a data structure 
		  consisting of a collection of nodes which together represent a sequence. In its most basic form, 
		  each node contains: data, and a reference (in other words, a link) to the next node in the sequence.
		  This structure allows for efficient insertion or removal of elements from any position in the
		  sequence during iteration. More complex variants add additional links, allowing more efficient
		  insertion or removal of nodes at arbitrary positions. A drawback of linked lists is that access 
		  time is linear (and difficult to pipeline). Faster access, such as random access, is not feasible.
		  Arrays have better cache locality compared to linked lists.
		  
		  
	-->	A linked list whose nodes contain two fields: an integer value and a link to the next node.
		The last node is linked to a terminator used to signify the end of the list.
		
	-->	Linked lists are among the simplest and most common data structures. They can be used to implement
		several other common abstract data types, including lists, stacks, queues, associative arrays, and 
		S-expressions, though it is not uncommon to implement those data structures directly without using 
		a linked list as the basis.

	-->	The principal benefit of a linked list over a conventional array is that the list elements can be easily
		inserted or removed without reallocation or reorganization of the entire structure because the data items
		need not be stored contiguously in memory or on disk, while restructuring an array at run-time is a much 
		more expensive operation. Linked lists allow insertion and removal of nodes at any point in the list, and 
		allow doing so with a constant number of operations by keeping the link previous to the link being added
		or removed in memory during list traversal.
		
		
                                         Singly linked list	
                                     ==============================
   --> Singly linked list can be defined as the collection of ordered set of elements. The number of elements may
       vary according to need of the program. A node in the singly linked list consist of two parts: data part and 
       link part. Data part of the node stores actual information that is to be represented by the node while 
       the link part of the node stores the address of its immediate successor.

   --> One way chain or singly linked list can be traversed only in one direction. In other words,
       we can say that each node contains only next pointer, therefore we can not traverse the list in the reverse direction.                              
	
		